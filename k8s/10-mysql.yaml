apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: bogtoworld
spec:
  clusterIP: None
  selector: { app: mysql }
  ports:
    - port: 3306
      name: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: bogtoworld
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels: { app: mysql }
  template:
    metadata:
      labels: { app: mysql }
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          args:
            - "--character-set-server=utf8mb4"
            - "--collation-server=utf8mb4_0900_ai_ci"
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom: { secretKeyRef: { name: mysql-secret, key: mysql-root-password } }
            - name: MYSQL_DATABASE
              value: bogtoworld
            - name: MYSQL_USER
              valueFrom: { secretKeyRef: { name: mysql-secret, key: mysql-user } }
            - name: MYSQL_PASSWORD
              valueFrom: { secretKeyRef: { name: mysql-secret, key: mysql-password } }
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: initdb
          configMap:
            name: init-sql
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
